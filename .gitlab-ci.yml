stages:
  - build
  - test
  - backup
  - deploy

build:
  stage: build
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker build -t glpi .
    - tar -czf glpi.tar.gz .
  artifacts:
    paths:
      - glpi.tar.gz

# Run the application's test suite
# Dependencies and translations are built with --build
# The script cleans up containers automatically

test:
  stage: test
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
    COMPOSE_FILE: ".github/actions/docker-compose-app.yml:.github/actions/docker-compose-services.yml"
    APPLICATION_ROOT: "$CI_PROJECT_DIR"
    DB_IMAGE: "githubactions-mariadb:10.11"
    PHP_IMAGE: "githubactions-php-apache:8.3"
    UPDATE_FILES_ACL: "true"
  script:
    - tests/run_tests.sh --build install update phpunit functional cache ldap imap javascript

backup:
  stage: backup
  script:
    - mkdir -p /var/www/backups
    - tar -czf /var/www/backups/glpi-$(date +%F-%H%M%S).tar.gz /var/www/glpi

deploy:
  stage: deploy
  script:
    - tar -xzf glpi.tar.gz -C /var/www/glpi --strip-components=1
  needs: [build]
  only:
    - main
